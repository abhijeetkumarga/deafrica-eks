---
# Alchemist deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xd4-alchemist-pull-dep
  namespace: alchemist-processor
  labels:
    app: xd4-alchemist-pull-dep
spec:
#  replicas: 1
  selector:
    matchLabels:
      app: xd4-alchemist-pull-dep
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: deafrica-ec2-s3_access
        #iam.amazonaws.com/role: deafrica-eks-c2-indexing
      labels:
        app: xd4-alchemist-pull-dep
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodetype
                    operator: In
                    values:
                      - spot
      containers:
        - name: alchemist-processor-container
          image: opendatacube/datacube-alchemist
          command: [ "datacube-alchemist", "processqueue" ]
          resources:
            requests:
              cpu: 2.0
              memory: 8192Mi
            limits:
              cpu: 3
              memory: 8192Mi
          tty: true
          stdin: true
          env:
            - name: ALCHEMIST_PROCESSQUEUE_MESSAGE_QUEUE
              value: "alchemist-standard-test"
              #value: "fc-alchemist"
            - name: AWS_DEFAULT_REGION
              value: us-west-2
            - name: DATACUBE_CONFIG_PATH
              value: "/opt/custom-config.conf"
            - name: DB_DATABASE
              value: "collection2"
            - name: DB_HOSTNAME
              value: "database.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: collection2-datacube
                  key: postgres-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: collection2-datacube
                  key: postgres-password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-service-process-data
                  key: aws-data-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-service-process-data
                  key: aws-process-data-secret-key
---
# Service account for autoscaler
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sqs-scaler
  namespace: alchemist-processor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sqs-scaler
  namespace: alchemist-processor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sqs-scaler
subjects:
  - kind: ServiceAccount
    name: sqs-scaler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sqs-scaler
  namespace: alchemist-processor
rules:
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
      - patch
---
# Autoscale alchemist based on sqs queue
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xd4-alchemist-sqs-autoscaler
  namespace: alchemist-processor
spec:
  selector:
    matchLabels:
      app: xd4-alchemist-sqs-autoscaler
  revisionHistoryLimit: 1
  replicas: 1
  template:
    metadata:
      labels:
        app: xd4-alchemist-sqs-autoscaler
    spec:
      serviceAccountName: sqs-scaler
      containers:
        - name: k8s-sqs-autoscaler
          image: opendatacube/k8s-sqs-autoscaler:1.0.2
          command:
            - ./k8s-sqs-autoscaler
            - --sqs-queue-name=$(SQS_QUEUE_NAME)  # required
            - --kubernetes-deployment=$(KUBERNETES_DEPLOYMENT) # required
            - --kubernetes-namespace=$(K8S_NAMESPACE) # required
            - --aws-region=$(AWS_DEFAULT_REGION)  #required
            - --poll-period=1 # poll every second
            - --scale-up-messages=20 # should match max pods
            - --scale-down-messages=20 # should match max pods
            - --max-pods=20 # optional
            - --min-pods=0  # optional
            - --scale-down-cool-down=10 # optional
            - --scale-up-cool-down=10 # optional
          env:
            - name: LOGGING_LEVEL
              value: DEBUG
            - name: KUBERNETES_DEPLOYMENT
              value: xd4-alchemist-pull-dep
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SQS_QUEUE_NAME
              value: alchemist-standard-test
            - name: AWS_DEFAULT_REGION
              value: us-west-2
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-service-process-data
                  key: aws-data-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-service-process-data
                  key: aws-process-data-secret-key
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "1512Mi"
              cpu: "500m"